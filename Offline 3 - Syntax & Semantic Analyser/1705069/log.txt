At line no: 1 type_specifier	: INT

int


New ScopeTable #1.1 created

ScopeTable #1.1

ScopeTable #1
1 --> <main: ID> 
At line no: 2 type_specifier	: INT

int

At line no: 2 declaration_list : ID

a


ScopeTable #1.1

ScopeTable #1
1 --> <main: ID> 
At line no: 2 declaration_list : declaration_list COMMA ID

a, b


ScopeTable #1.1
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 
At line no: 2 declaration_list : declaration_list COMMA ID

a, b, c


ScopeTable #1.1
0 --> <b: ID> 
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 
At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

int a, b, c;

At line no: 2 statement : var_declaration

int a, b, c;

At line no: 2 statements : statement

int a, b, c;

At line no: 3 variable : ID

a

At line no: 3 factor : CONST_INT

60

At line no: 3 unary_expression : factor

60

At line no: 3 term : unary_expression

60

At line no: 3 simple_expression : term

60

At line no: 3 rel_expression : simple_expression

60

At line no: 3 logic_expression : simple_expression

60

At line no: 3 expression : variable ASSIGNOP logic_expression

a=60

At line no: 3 expression_statement : expression SEMICOLON

a=60;

At line no: 3 statement : expression_statement

a=60;

At line no: 3 statements : statements statement

int a, b, c; a=60;

At line no: 4 variable : ID

b

At line no: 4 factor : CONST_INT

69

At line no: 4 unary_expression : factor

69

At line no: 4 term : unary_expression

69

At line no: 4 simple_expression : term

69

At line no: 4 rel_expression : simple_expression

69

At line no: 4 logic_expression : simple_expression

69

At line no: 4 expression : variable ASSIGNOP logic_expression

b=69

At line no: 4 expression_statement : expression SEMICOLON

b=69;

At line no: 4 statement : expression_statement

b=69;

At line no: 4 statements : statements statement

int a, b, c; a=60; b=69;

At line no: 5 variable : ID

c

At line no: 5 variable : ID

a

At line no: 5 factor : variable

a

At line no: 5 unary_expression : factor

a

At line no: 5 term : unary_expression

a

At line no: 5 simple_expression : term

a

At line no: 5 variable : ID

b

At line no: 5 factor : variable

b

At line no: 5 unary_expression : factor

b

At line no: 5 term : unary_expression

b

At line no: 5 simple_expression : term

b

At line no: 5 rel_expression : simple_expression RELOP simple_expression

a>b

At line no: 5 logic_expression : simple_expression

a>b

At line no: 5 expression : variable ASSIGNOP logic_expression

c=a>b

At line no: 5 expression_statement : expression SEMICOLON

c=a>b;

At line no: 5 statement : expression_statement

c=a>b;

At line no: 5 statements : statements statement

int a, b, c; a=60; b=69; c=a>b;

At line no: 6 compound_statement : LCURL statements RCURL

{
int a, b, c; a=60; b=69; c=a>b;}


At line no: 6 func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main ( ) {
int a, b, c; a=60; b=69; c=a>b;}


At line no: 6 unit : func_definition

int main ( ) {
int a, b, c; a=60; b=69; c=a>b;}


At line no: 6 program : unit

int main ( ) {
int a, b, c; a=60; b=69; c=a>b;}



ScopeTable #1.1
0 --> <b: ID> 
1 --> <c: ID> 
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 

Total lines: 7
Total errors: 0
