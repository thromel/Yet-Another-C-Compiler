At line no: 1 type_specifier	: INT

int


New ScopeTable #1.1 created

ScopeTable #1.1

ScopeTable #1
1 --> <main: ID> 
At line no: 2 type_specifier	: INT

int

At line no: 2 declaration_list : ID

a


ScopeTable #1.1

ScopeTable #1
1 --> <main: ID> 
At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

int a;

At line no: 2 statement : var_declaration

int a;

At line no: 2 statements : statement

int a;

At line no: 3 variable : ID

a

At line no: 3 factor : CONST_INT

10

At line no: 3 unary_expression : factor

10

At line no: 3 term : unary_expression

10

At line no: 3 simple_expression : term

10

At line no: 3 rel_expression : simple_expression

10

At line no: 3 logic_expression : simple_expression

10

At line no: 3 expression : variable ASSIGNOP logic_expression

a=10

At line no: 3 expression_statement : expression SEMICOLON

a=10;

At line no: 3 statement : expression_statement

a=10;

At line no: 3 statements : statements statement

int a; a=10;

At line no: 4 variable : ID

a

At line no: 4 factor : variable INCOP

a++

At line no: 4 unary_expression : factor

a++

At line no: 4 term : unary_expression

a++

At line no: 4 simple_expression : term

a++

At line no: 4 rel_expression : simple_expression

a++

At line no: 4 logic_expression : simple_expression

a++

At line no: 4 expression : logic_expression

a++

At line no: 4 expression_statement : expression SEMICOLON

a++;

At line no: 4 statement : expression_statement

a++;

At line no: 4 statements : statements statement

int a; a=10; a++;

At line no: 5 variable : ID

a

At line no: 5 variable : ID

a

At line no: 5 factor : variable

a

At line no: 5 unary_expression : factor

a

At line no: 5 term : unary_expression

a

At line no: 5 simple_expression : term

a

At line no: 5 factor : CONST_INT

10

At line no: 5 unary_expression : factor

10

At line no: 5 term : unary_expression

10

At line no: 5 simple expression : simple_expression ADDOP term

a+10

At line no: 5 rel_expression : simple_expression

a+10

At line no: 5 logic_expression : simple_expression

a+10

At line no: 5 expression : variable ASSIGNOP logic_expression

a=a+10

At line no: 5 expression_statement : expression SEMICOLON

a=a+10;

At line no: 5 statement : expression_statement

a=a+10;

At line no: 5 statements : statements statement

int a; a=10; a++; a=a+10;

At line no: 6 variable : ID

a

At line no: 6 factor: variable DECOP

a--

At line no: 6 unary_expression : factor

a--

At line no: 6 term : unary_expression

a--

At line no: 6 simple_expression : term

a--

At line no: 6 rel_expression : simple_expression

a--

At line no: 6 logic_expression : simple_expression

a--

At line no: 6 expression : logic_expression

a--

At line no: 6 expression_statement : expression SEMICOLON

a--;

At line no: 6 statement : expression_statement

a--;

At line no: 6 statements : statements statement

int a; a=10; a++; a=a+10; a--;

At line no: 8 compound_statement : LCURL statements RCURL

{
int a; a=10; a++; a=a+10; a--;}


At line no: 8 func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main ( ) {
int a; a=10; a++; a=a+10; a--;}


At line no: 8 unit : func_definition

int main ( ) {
int a; a=10; a++; a=a+10; a--;}


At line no: 8 program : unit

int main ( ) {
int a; a=10; a++; a=a+10; a--;}



ScopeTable #1.1
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 

Total lines: 9
Total errors: 0
