Line no: 1 type_specifier	: INT

------------------
int

 

------------------

New ScopeTable #1_1 created
Line no: 2 type_specifier	: INT

------------------
int

 

------------------
Line no: 2 declaration_list :ID LTHIRD CONST_INT RTHIRD 

------------------
a[20]

 

------------------
Line no: 2 declaration_list : declaration_list COMMA ID

------------------
a[20], i

 

------------------
Line no: 2 declaration_list : declaration_list COMMA ID

------------------
a[20], i, b

 

------------------
Line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

------------------
int a[20], i, b;

 

------------------
Line no: 2 statement : var_declaration

------------------
int a[20], i, b;

 

------------------
Line no: 2 statements : statement

------------------
int a[20], i, b;

 

------------------
Line no: 3 variable : ID

------------------
i

 

------------------
Line no: 3 factor : CONST_INT

------------------
0

 

------------------
Line no: 3 unary_expression : factor

------------------
0

 

------------------
Line no: 3 term : unary_expression

------------------
0

 

------------------
Line no: 3 simple_expression : term

------------------
0

 

------------------
Line no: 3 rel_expression : simple_expression

------------------
0

 

------------------
Line no: 3 logic_expression : rel_expression

------------------
0

 

------------------
Line no: 3 expression : variable ASSIGNOP logic_expression

------------------
i=0

 
 
MOV AX, 0
MOV i1_1, AX 


------------------
Line no: 3 expression_statement : expression SEMICOLON

------------------
i=0;

 
 
MOV AX, 0
MOV i1_1, AX 


------------------
Line no: 3 variable : ID

------------------
i

 

------------------
Line no: 3 factor : variable

------------------
i

 

------------------
Line no: 3 unary_expression : factor

------------------
i

 

------------------
Line no: 3 term : unary_expression

------------------
i

 

------------------
Line no: 3 simple_expression : term

------------------
i

 

------------------
Line no: 3 factor : CONST_INT

------------------
20

 

------------------
Line no: 3 unary_expression : factor

------------------
20

 

------------------
Line no: 3 term : unary_expression

------------------
20

 

------------------
Line no: 3 simple_expression : term

------------------
20

 

------------------
Line no: 3 rel_expression : simple_expression RELOP simple_expression

------------------
i<20

 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 


------------------
Line no: 3 logic_expression : rel_expression

------------------
i<20

 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 


------------------
Line no: 3 expression : logic_expression

------------------
i<20

 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 


------------------
Line no: 3 expression_statement : expression SEMICOLON

------------------
i<20;

 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 


------------------
Line no: 3 variable : ID

------------------
i

 

------------------
Line no: 3 factor : variable INCOP

------------------
i++

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX


------------------
Line no: 3 unary_expression : factor

------------------
i++

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX


------------------
Line no: 3 term : unary_expression

------------------
i++

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX


------------------
Line no: 3 simple_expression : term

------------------
i++

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX


------------------
Line no: 3 rel_expression : simple_expression

------------------
i++

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX


------------------
Line no: 3 logic_expression : rel_expression

------------------
i++

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX


------------------
Line no: 3 expression : logic_expression

------------------
i++

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX


------------------

New ScopeTable #1_1_1 created
Line no: 4 variable : ID

------------------
i

 

------------------
Line no: 4 factor : variable

------------------
i

 

------------------
Line no: 4 unary_expression : factor

------------------
i

 

------------------
Line no: 4 term : unary_expression

------------------
i

 

------------------
Line no: 4 simple_expression : term

------------------
i

 

------------------
Line no: 4 rel_expression : simple_expression

------------------
i

 

------------------
Line no: 4 logic_expression : rel_expression

------------------
i

 

------------------
Line no: 4 expression : logic_expression

------------------
i

 

------------------
Line no: 4 variable : ID LTHIRD expression RTHIRD

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 4 variable : ID

------------------
i

 

------------------
Line no: 4 factor : variable

------------------
i

 

------------------
Line no: 4 unary_expression : factor

------------------
i

 

------------------
Line no: 4 term : unary_expression

------------------
i

 

------------------
Line no: 4 simple_expression : term

------------------
i

 

------------------
Line no: 4 factor : CONST_INT

------------------
1

 

------------------
Line no: 4 unary_expression : factor

------------------
1

 

------------------
Line no: 4 term : unary_expression

------------------
1

 

------------------
Line no: 4 simple expression : simple_expression ADDOP term

------------------
i+1

 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX


------------------
Line no: 4 rel_expression : simple_expression

------------------
i+1

 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX


------------------
Line no: 4 logic_expression : rel_expression

------------------
i+1

 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX


------------------
Line no: 4 expression : variable ASSIGNOP logic_expression

------------------
a[1]=i+1

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 


------------------
Line no: 4 expression_statement : expression SEMICOLON

------------------
a[1]=i+1;

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 


------------------
Line no: 4 statement : expression_statement

------------------
a[1]=i+1;

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 


------------------
Line no: 4 statements : statement

------------------
a[1]=i+1;

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 


------------------
Line no: 5 compound_statement : LCURL statements RCURL

------------------
{
a[1]=i+1;
}


 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 


------------------

ScopeTable #1_1_1

ScopeTable #1_1
0 --> <i: ID>  <b: ID> 
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 
Line no: 5 statement : compound_statement

------------------
{
a[1]=i+1;
}


 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 


------------------
Line no: 5 FOR LPAREN expression_statement expression_statement expression RPAREN statement

------------------
for(i=0;i<20;i++){
a[1]=i+1;
}


 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L2:
 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 

MOV AX, temp0
CMP AX, 0
JE L3
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX

JMP L2
L3:
;for loop end

------------------
Line no: 5 statements : statements statement

------------------
int a[20], i, b;
for(i=0;i<20;i++){
a[1]=i+1;
}


 
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L2:
 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 

MOV AX, temp0
CMP AX, 0
JE L3
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX

JMP L2
L3:
;for loop end

------------------
Line no: 6 variable : ID

------------------
i

 

------------------
Line no: 6 factor : CONST_INT

------------------
0

 

------------------
Line no: 6 unary_expression : factor

------------------
0

 

------------------
Line no: 6 term : unary_expression

------------------
0

 

------------------
Line no: 6 simple_expression : term

------------------
0

 

------------------
Line no: 6 rel_expression : simple_expression

------------------
0

 

------------------
Line no: 6 logic_expression : rel_expression

------------------
0

 

------------------
Line no: 6 expression : variable ASSIGNOP logic_expression

------------------
i=0

 
 
MOV AX, 0
MOV i1_1, AX 


------------------
Line no: 6 expression_statement : expression SEMICOLON

------------------
i=0;

 
 
MOV AX, 0
MOV i1_1, AX 


------------------
Line no: 6 variable : ID

------------------
i

 

------------------
Line no: 6 factor : variable

------------------
i

 

------------------
Line no: 6 unary_expression : factor

------------------
i

 

------------------
Line no: 6 term : unary_expression

------------------
i

 

------------------
Line no: 6 simple_expression : term

------------------
i

 

------------------
Line no: 6 factor : CONST_INT

------------------
20

 

------------------
Line no: 6 unary_expression : factor

------------------
20

 

------------------
Line no: 6 term : unary_expression

------------------
20

 

------------------
Line no: 6 simple_expression : term

------------------
20

 

------------------
Line no: 6 rel_expression : simple_expression RELOP simple_expression

------------------
i<20

 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 


------------------
Line no: 6 logic_expression : rel_expression

------------------
i<20

 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 


------------------
Line no: 6 expression : logic_expression

------------------
i<20

 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 


------------------
Line no: 6 expression_statement : expression SEMICOLON

------------------
i<20;

 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 


------------------
Line no: 6 variable : ID

------------------
i

 

------------------
Line no: 6 factor : variable INCOP

------------------
i++

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX


------------------
Line no: 6 unary_expression : factor

------------------
i++

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX


------------------
Line no: 6 term : unary_expression

------------------
i++

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX


------------------
Line no: 6 simple_expression : term

------------------
i++

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX


------------------
Line no: 6 rel_expression : simple_expression

------------------
i++

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX


------------------
Line no: 6 logic_expression : rel_expression

------------------
i++

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX


------------------
Line no: 6 expression : logic_expression

------------------
i++

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX


------------------

New ScopeTable #1_1_2 created
Line no: 7 variable : ID

------------------
b

 

------------------
Line no: 7 variable : ID

------------------
i

 

------------------
Line no: 7 factor : variable

------------------
i

 

------------------
Line no: 7 unary_expression : factor

------------------
i

 

------------------
Line no: 7 term : unary_expression

------------------
i

 

------------------
Line no: 7 simple_expression : term

------------------
i

 

------------------
Line no: 7 rel_expression : simple_expression

------------------
i

 

------------------
Line no: 7 logic_expression : rel_expression

------------------
i

 

------------------
Line no: 7 expression : logic_expression

------------------
i

 

------------------
Line no: 7 variable : ID LTHIRD expression RTHIRD

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 7 factor : variable

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 7 unary_expression : factor

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 7 term : unary_expression

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 7 simple_expression : term

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 7 rel_expression : simple_expression

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 7 logic_expression : rel_expression

------------------
a[1]

 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX

------------------
Line no: 7 expression : variable ASSIGNOP logic_expression

------------------
b=a[1]

 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


------------------
Line no: 7 expression_statement : expression SEMICOLON

------------------
b=a[1];

 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


------------------
Line no: 7 statement : expression_statement

------------------
b=a[1];

 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


------------------
Line no: 7 statements : statement

------------------
b=a[1];

 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


------------------
Line no: 8 PRINTLN LPAREN ID RPAREN SEMICOLON

------------------
printf(b);

 

------------------
2
Line no: 8 statements : statements statement

------------------
b=a[1];
printf(b);

 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC


------------------
Line no: 9 compound_statement : LCURL statements RCURL

------------------
{
b=a[1];
printf(b);
}


 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC


------------------

ScopeTable #1_1_2

ScopeTable #1_1
0 --> <i: ID>  <b: ID> 
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 
Line no: 9 statement : compound_statement

------------------
{
b=a[1];
printf(b);
}


 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC


------------------
Line no: 9 FOR LPAREN expression_statement expression_statement expression RPAREN statement

------------------
for(i=0;i<20;i++){
b=a[1];
printf(b);
}


 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L6:
 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 

MOV AX, temp1
CMP AX, 0
JE L7
 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX

JMP L6
L7:
;for loop end

------------------
Line no: 9 statements : statements statement

------------------
int a[20], i, b;
for(i=0;i<20;i++){
a[1]=i+1;
}

for(i=0;i<20;i++){
b=a[1];
printf(b);
}


 
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L2:
 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 

MOV AX, temp0
CMP AX, 0
JE L3
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX

JMP L2
L3:
;for loop end
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L6:
 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 

MOV AX, temp1
CMP AX, 0
JE L7
 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX

JMP L6
L7:
;for loop end

------------------
Line no: 10 compound_statement : LCURL statements RCURL

------------------
{
int a[20], i, b;
for(i=0;i<20;i++){
a[1]=i+1;
}

for(i=0;i<20;i++){
b=a[1];
printf(b);
}

}


 
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L2:
 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 

MOV AX, temp0
CMP AX, 0
JE L3
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX

JMP L2
L3:
;for loop end
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L6:
 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 

MOV AX, temp1
CMP AX, 0
JE L7
 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX

JMP L6
L7:
;for loop end

------------------

ScopeTable #1_1
0 --> <i: ID>  <b: ID> 
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 
Line no: 10 func_definition : type_specifier ID LPAREN RPAREN compound_statement

------------------
int main ( ) {
int a[20], i, b;
for(i=0;i<20;i++){
a[1]=i+1;
}

for(i=0;i<20;i++){
b=a[1];
printf(b);
}

}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L2:
 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 

MOV AX, temp0
CMP AX, 0
JE L3
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX

JMP L2
L3:
;for loop end
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L6:
 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 

MOV AX, temp1
CMP AX, 0
JE L7
 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX

JMP L6
L7:
;for loop end
MOV AH, 4CH
INT 21H
MAIN ENDP



------------------
Line no: 10 unit : func_definition

------------------
int main ( ) {
int a[20], i, b;
for(i=0;i<20;i++){
a[1]=i+1;
}

for(i=0;i<20;i++){
b=a[1];
printf(b);
}

}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L2:
 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 

MOV AX, temp0
CMP AX, 0
JE L3
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX

JMP L2
L3:
;for loop end
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L6:
 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 

MOV AX, temp1
CMP AX, 0
JE L7
 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX

JMP L6
L7:
;for loop end
MOV AH, 4CH
INT 21H
MAIN ENDP



------------------
Line no: 10 program : unit

------------------
int main ( ) {
int a[20], i, b;
for(i=0;i<20;i++){
a[1]=i+1;
}

for(i=0;i<20;i++){
b=a[1];
printf(b);
}

}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L2:
 
 
MOV AX, i1_1
CMP AX, 20
JL L0
MOV temp0, 0
JMP L1
L0: 
MOV temp0, 1
L1: 

MOV AX, temp0
CMP AX, 0
JE L3
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
 
 
MOV AX, i1_1
ADD AX, 1
MOV temp1, AX

MOV AX, temp1
MOV a1_1[SI], AX 

MOV AX, i1_1
MOV temp0, AX
INC AX
MOV i1_1, AX

JMP L2
L3:
;for loop end
 
;for loop start
 
 
MOV AX, 0
MOV i1_1, AX 

L6:
 
 
MOV AX, i1_1
CMP AX, 20
JL L4
MOV temp1, 0
JMP L5
L4: 
MOV temp1, 1
L5: 

MOV AX, temp1
CMP AX, 0
JE L7
 
 
MOV AX, i1_1
MOV BX, 2
IMUL BX
MOV SI, AX
MOV AX, a1_1[SI]
MOV b1_1, AX 


MOV AX, b1_1
CALL OUTDEC

MOV AX, i1_1
MOV temp1, AX
INC AX
MOV i1_1, AX

JMP L6
L7:
;for loop end
MOV AH, 4CH
INT 21H
MAIN ENDP



------------------

ScopeTable #1
1 --> <main: ID> 

Total lines: 10
Total errors: 0
-------------------------------------
Optimizer log: 
Removed blank line : 18
Removed blank line : 19
Removed blank line : 21
Removed blank line : 22
Removed blank line : 27
Removed blank line : 28
Removed blank line : 41
Removed blank line : 46
Removed blank line : 47
Optimized redundant MOV operation: 52
Removed blank line : 63
Removed blank line : 65
Removed blank line : 66
Removed blank line : 71
Removed blank line : 72
Removed blank line : 85
Removed blank line : 86
Optimized redundant MOV operation: 95
Line removed:18
-------------------------------------

ScopeTable #1
1 --> <main: ID> 
