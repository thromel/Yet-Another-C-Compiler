Line no: 1 type_specifier	: INT

------------------
int

 

------------------

New ScopeTable #1_1 created
Line no: 2 type_specifier	: INT

------------------
int

 

------------------
Line no: 2 declaration_list : ID

------------------
a

 

------------------
Line no: 2 declaration_list : declaration_list COMMA ID

------------------
a, b

 

------------------
Line no: 2 declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD 

------------------
a, b, c[3]

 

------------------
Line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

------------------
int a, b, c[3];

 

------------------
Line no: 2 statement : var_declaration

------------------
int a, b, c[3];

 

------------------
Line no: 2 statements : statement

------------------
int a, b, c[3];

 

------------------
Line no: 3 variable : ID

------------------
a

 

------------------
Line no: 3 factor : CONST_INT

------------------
1

 

------------------
Line no: 3 unary_expression : factor

------------------
1

 

------------------
Line no: 3 term : unary_expression

------------------
1

 

------------------
Line no: 3 factor : CONST_INT

------------------
2

 

------------------
Line no: 3 unary_expression : factor

------------------
2

 

------------------
Line no: 3 term : unary_expression

------------------
2

 

------------------
Line no: 3 simple_expression : term

------------------
2

 

------------------
Line no: 3 factor : CONST_INT

------------------
3

 

------------------
Line no: 3 unary_expression : factor

------------------
3

 

------------------
Line no: 3 term : unary_expression

------------------
3

 

------------------
Line no: 3 simple expression : simple_expression ADDOP term

------------------
2+3

 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX


------------------
Line no: 3 rel_expression : simple_expression

------------------
2+3

 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX


------------------
Line no: 3 logic_expression : rel_expression

------------------
2+3

 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX


------------------
Line no: 3 expression : logic_expression

------------------
2+3

 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX


------------------
Line no: 3 factor : LPAREN expression RPAREN

------------------
(2+3)

 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX


------------------
Line no: 3 unary_expression : factor

------------------
(2+3)

 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX


------------------
Line no: 3 term : term MULOP unary_expression

------------------
1*(2+3)

 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX


------------------
Line no: 3 factor : CONST_INT

------------------
3

 

------------------
Line no: 3 unary_expression : factor

------------------
3

 

------------------
Line no: 3 term : term MULOP unary_expression

------------------
1*(2+3)%3

 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX


------------------
Line no: 3 simple_expression : term

------------------
1*(2+3)%3

 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX


------------------
Line no: 3 rel_expression : simple_expression

------------------
1*(2+3)%3

 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX


------------------
Line no: 3 logic_expression : rel_expression

------------------
1*(2+3)%3

 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX


------------------
Line no: 3 expression : variable ASSIGNOP logic_expression

------------------
a=1*(2+3)%3

 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 


------------------
Line no: 3 expression_statement : expression SEMICOLON

------------------
a=1*(2+3)%3;

 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 


------------------
Line no: 3 statement : expression_statement

------------------
a=1*(2+3)%3;

 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 


------------------
Line no: 3 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 


------------------
Line no: 4 variable : ID

------------------
b

 

------------------
Line no: 4 factor : CONST_INT

------------------
1

 

------------------
Line no: 4 unary_expression : factor

------------------
1

 

------------------
Line no: 4 term : unary_expression

------------------
1

 

------------------
Line no: 4 simple_expression : term

------------------
1

 

------------------
Line no: 4 factor : CONST_INT

------------------
5

 

------------------
Line no: 4 unary_expression : factor

------------------
5

 

------------------
Line no: 4 term : unary_expression

------------------
5

 

------------------
Line no: 4 simple_expression : term

------------------
5

 

------------------
Line no: 4 rel_expression : simple_expression RELOP simple_expression

------------------
1<5

 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 


------------------
Line no: 4 logic_expression : rel_expression

------------------
1<5

 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 


------------------
Line no: 4 expression : variable ASSIGNOP logic_expression

------------------
b=1<5

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 


------------------
Line no: 4 expression_statement : expression SEMICOLON

------------------
b=1<5;

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 


------------------
Line no: 4 statement : expression_statement

------------------
b=1<5;

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 


------------------
Line no: 4 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 


------------------
Line no: 5 factor : CONST_INT

------------------
0

 

------------------
Line no: 5 unary_expression : factor

------------------
0

 

------------------
Line no: 5 term : unary_expression

------------------
0

 

------------------
Line no: 5 simple_expression : term

------------------
0

 

------------------
Line no: 5 rel_expression : simple_expression

------------------
0

 

------------------
Line no: 5 logic_expression : rel_expression

------------------
0

 

------------------
Line no: 5 expression : logic_expression

------------------
0

 

------------------
Line no: 5 variable : ID LTHIRD expression RTHIRD

------------------
c[0]

 
MOV BX, 0
SHL BX, 1

------------------
Line no: 5 factor : CONST_INT

------------------
2

 

------------------
Line no: 5 unary_expression : factor

------------------
2

 

------------------
Line no: 5 term : unary_expression

------------------
2

 

------------------
Line no: 5 simple_expression : term

------------------
2

 

------------------
Line no: 5 rel_expression : simple_expression

------------------
2

 

------------------
Line no: 5 logic_expression : rel_expression

------------------
2

 

------------------
Line no: 5 expression : variable ASSIGNOP logic_expression

------------------
c[0]=2

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 


------------------
Line no: 5 expression_statement : expression SEMICOLON

------------------
c[0]=2;

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 


------------------
Line no: 5 statement : expression_statement

------------------
c[0]=2;

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 


------------------
Line no: 5 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 


------------------
Line no: 6 factor : CONST_INT

------------------
2

 

------------------
Line no: 6 unary_expression : factor

------------------
2

 

------------------
Line no: 6 term : unary_expression

------------------
2

 

------------------
Line no: 6 simple_expression : term

------------------
2

 

------------------
Line no: 6 rel_expression : simple_expression

------------------
2

 

------------------
Line no: 6 logic_expression : rel_expression

------------------
2

 

------------------
Line no: 6 expression : logic_expression

------------------
2

 

------------------
Line no: 6 variable : ID LTHIRD expression RTHIRD

------------------
c[2]

 
MOV BX, 2
SHL BX, 1
MOV SI, BX

------------------
Line no: 6 factor : CONST_INT

------------------
69

 

------------------
Line no: 6 unary_expression : factor

------------------
69

 

------------------
Line no: 6 term : unary_expression

------------------
69

 

------------------
Line no: 6 simple_expression : term

------------------
69

 

------------------
Line no: 6 rel_expression : simple_expression

------------------
69

 

------------------
Line no: 6 logic_expression : rel_expression

------------------
69

 

------------------
Line no: 6 expression : variable ASSIGNOP logic_expression

------------------
c[2]=69

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 


------------------
Line no: 6 expression_statement : expression SEMICOLON

------------------
c[2]=69;

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 


------------------
Line no: 6 statement : expression_statement

------------------
c[2]=69;

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 


------------------
Line no: 6 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 


------------------
Line no: 7 variable : ID

------------------
a

 

------------------
Line no: 7 factor : variable

------------------
a

 

------------------
Line no: 7 unary_expression : factor

------------------
a

 

------------------
Line no: 7 term : unary_expression

------------------
a

 

------------------
Line no: 7 simple_expression : term

------------------
a

 

------------------
Line no: 7 rel_expression : simple_expression

------------------
a

 

------------------
Line no: 7 variable : ID

------------------
b

 

------------------
Line no: 7 factor : variable

------------------
b

 

------------------
Line no: 7 unary_expression : factor

------------------
b

 

------------------
Line no: 7 term : unary_expression

------------------
b

 

------------------
Line no: 7 simple_expression : term

------------------
b

 

------------------
Line no: 7 rel_expression : simple_expression

------------------
b

 

------------------
Line no: 7 logic_expression : rel_expression LOGICOP rel_expression

------------------
a&&b

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX

------------------
Line no: 7 expression : logic_expression

------------------
a&&b

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX

------------------
Line no: 8 factor : CONST_INT

------------------
0

 

------------------
Line no: 8 unary_expression : factor

------------------
0

 

------------------
Line no: 8 term : unary_expression

------------------
0

 

------------------
Line no: 8 simple_expression : term

------------------
0

 

------------------
Line no: 8 rel_expression : simple_expression

------------------
0

 

------------------
Line no: 8 logic_expression : rel_expression

------------------
0

 

------------------
Line no: 8 expression : logic_expression

------------------
0

 

------------------
Line no: 8 variable : ID LTHIRD expression RTHIRD

------------------
c[0]

 
MOV BX, 0
SHL BX, 1

------------------
Line no: 8 factor : variable INCOP

------------------
c[0]++

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 unary_expression : factor

------------------
c[0]++

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 term : unary_expression

------------------
c[0]++

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 simple_expression : term

------------------
c[0]++

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 rel_expression : simple_expression

------------------
c[0]++

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 logic_expression : rel_expression

------------------
c[0]++

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 expression : logic_expression

------------------
c[0]++

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 expression_statement : expression SEMICOLON

------------------
c[0]++;

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 8 statement : expression_statement

------------------
c[0]++;

MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX


------------------
Line no: 10 factor : CONST_INT

------------------
1

 

------------------
Line no: 10 unary_expression : factor

------------------
1

 

------------------
Line no: 10 term : unary_expression

------------------
1

 

------------------
Line no: 10 simple_expression : term

------------------
1

 

------------------
Line no: 10 rel_expression : simple_expression

------------------
1

 

------------------
Line no: 10 logic_expression : rel_expression

------------------
1

 

------------------
Line no: 10 expression : logic_expression

------------------
1

 

------------------
Line no: 10 variable : ID LTHIRD expression RTHIRD

------------------
c[1]

 
MOV BX, 1
SHL BX, 1
MOV SI, BX

------------------
Line no: 10 factor : CONST_INT

------------------
0

 

------------------
Line no: 10 unary_expression : factor

------------------
0

 

------------------
Line no: 10 term : unary_expression

------------------
0

 

------------------
Line no: 10 simple_expression : term

------------------
0

 

------------------
Line no: 10 rel_expression : simple_expression

------------------
0

 

------------------
Line no: 10 logic_expression : rel_expression

------------------
0

 

------------------
Line no: 10 expression : logic_expression

------------------
0

 

------------------
Line no: 10 variable : ID LTHIRD expression RTHIRD

------------------
c[0]

 
MOV BX, 0
SHL BX, 1

------------------
Line no: 10 factor : variable

------------------
c[0]

 
MOV BX, 0
SHL BX, 1

------------------
Line no: 10 unary_expression : factor

------------------
c[0]

 
MOV BX, 0
SHL BX, 1

------------------
Line no: 10 term : unary_expression

------------------
c[0]

 
MOV BX, 0
SHL BX, 1

------------------
Line no: 10 simple_expression : term

------------------
c[0]

 
MOV BX, 0
SHL BX, 1

------------------
Line no: 10 factor : CONST_INT

------------------
2

 

------------------
Line no: 10 unary_expression : factor

------------------
2

 

------------------
Line no: 10 term : unary_expression

------------------
2

 

------------------
Line no: 10 simple_expression : term

------------------
2

 

------------------
Line no: 10 rel_expression : simple_expression

------------------
2

 

------------------
Line no: 10 logic_expression : rel_expression

------------------
2

 

------------------
Line no: 10 expression : logic_expression

------------------
2

 

------------------
Line no: 10 variable : ID LTHIRD expression RTHIRD

------------------
c[2]

 
MOV BX, 2
SHL BX, 1
MOV SI, BX

------------------
Line no: 10 factor : variable

------------------
c[2]

 
MOV BX, 2
SHL BX, 1
MOV SI, BX

------------------
Line no: 10 unary_expression : factor

------------------
c[2]

 
MOV BX, 2
SHL BX, 1
MOV SI, BX

------------------
Line no: 10 term : unary_expression

------------------
c[2]

 
MOV BX, 2
SHL BX, 1
MOV SI, BX

------------------
Line no: 10 simple expression : simple_expression ADDOP term

------------------
c[0]+c[2]

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX


------------------
Line no: 10 rel_expression : simple_expression

------------------
c[0]+c[2]

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX


------------------
Line no: 10 logic_expression : rel_expression

------------------
c[0]+c[2]

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX


------------------
Line no: 10 expression : variable ASSIGNOP logic_expression

------------------
c[1]=c[0]+c[2]

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 


------------------
Line no: 10 expression_statement : expression SEMICOLON

------------------
c[1]=c[0]+c[2];

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 


------------------
Line no: 10 statement : expression_statement

------------------
c[1]=c[0]+c[2];

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 


------------------
Line no: 10 IF LPAREN expression RPAREN statement ELSE statement

------------------
if(a&&b)c[0]++;else c[1]=c[0]+c[2];

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:


------------------
Line no: 10 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:


------------------
Line no: 11 variable : ID

------------------
a

 

------------------
Line no: 11 factor : CONST_INT

------------------
1

 

------------------
Line no: 11 unary_expression : factor

------------------
1

 

------------------
Line no: 11 term : unary_expression

------------------
1

 

------------------
Line no: 11 simple_expression : term

------------------
1

 

------------------
Line no: 11 rel_expression : simple_expression

------------------
1

 

------------------
Line no: 11 logic_expression : rel_expression

------------------
1

 

------------------
Line no: 11 expression : logic_expression

------------------
1

 

------------------
Line no: 11 variable : ID LTHIRD expression RTHIRD

------------------
c[1]

 
MOV BX, 1
SHL BX, 1

------------------
Line no: 11 factor : variable

------------------
c[1]

 
MOV BX, 1
SHL BX, 1

------------------
Line no: 11 unary_expression : factor

------------------
c[1]

 
MOV BX, 1
SHL BX, 1

------------------
Line no: 11 term : unary_expression

------------------
c[1]

 
MOV BX, 1
SHL BX, 1

------------------
Line no: 11 simple_expression : term

------------------
c[1]

 
MOV BX, 1
SHL BX, 1

------------------
Line no: 11 rel_expression : simple_expression

------------------
c[1]

 
MOV BX, 1
SHL BX, 1

------------------
Line no: 11 logic_expression : rel_expression

------------------
c[1]

 
MOV BX, 1
SHL BX, 1

------------------
Line no: 11 expression : variable ASSIGNOP logic_expression

------------------
a=c[1]

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


------------------
Line no: 11 expression_statement : expression SEMICOLON

------------------
a=c[1];

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


------------------
Line no: 11 statement : expression_statement

------------------
a=c[1];

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


------------------
Line no: 11 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];
a=c[1];

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


------------------
Line no: 12 PRINTLN LPAREN ID RPAREN SEMICOLON

------------------
printf(a);

 

------------------
140
Line no: 12 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];
a=c[1];
printf(a);

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


MOV AX, a1_1
CALL OUTDEC


------------------
Line no: 13 PRINTLN LPAREN ID RPAREN SEMICOLON

------------------
printf(b);

 

------------------
1
Line no: 13 statements : statements statement

------------------
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];
a=c[1];
printf(a);
printf(b);

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


MOV AX, a1_1
CALL OUTDEC


MOV AX, b1_1
CALL OUTDEC


------------------
Line no: 14 compound_statement : LCURL statements RCURL

------------------
{
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];
a=c[1];
printf(a);
printf(b);
}


 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


MOV AX, a1_1
CALL OUTDEC


MOV AX, b1_1
CALL OUTDEC


------------------

ScopeTable #1_1
0 --> <b: ID> 
1 --> <c: ID> 
6 --> <a: ID> 

ScopeTable #1
1 --> <main: ID> 
Line no: 14 func_definition : type_specifier ID LPAREN RPAREN compound_statement

------------------
int main ( ) {
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];
a=c[1];
printf(a);
printf(b);
}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


MOV AX, a1_1
CALL OUTDEC


MOV AX, b1_1
CALL OUTDEC

MOV AH, 4CH
INT 21H
MAIN ENDP



------------------
Line no: 14 unit : func_definition

------------------
int main ( ) {
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];
a=c[1];
printf(a);
printf(b);
}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


MOV AX, a1_1
CALL OUTDEC


MOV AX, b1_1
CALL OUTDEC

MOV AH, 4CH
INT 21H
MAIN ENDP



------------------
Line no: 14 program : unit

------------------
int main ( ) {
int a, b, c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
c[2]=69;
if(a&&b)c[0]++;else c[1]=c[0]+c[2];
a=c[1];
printf(a);
printf(b);
}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
 
 
 
 
 
 
MOV AX, 2
ADD AX, 3
MOV temp0, AX

MOV AX, 1
MOV BX, temp0
IMUL BX
MOV temp1, AX

 
MOV AX, temp1
MOV BX, 3
MOV AX, AX
CWD
IDIV BX
MOV temp2, DX

MOV AX, temp2
MOV a1_1, AX 

 
 
 
 
MOV AX, 1
CMP AX, 5
JL L0
MOV temp2, 0
JMP L1
L0: 
MOV temp2, 1
L1: 

MOV AX, temp2
MOV b1_1, AX 

 
MOV BX, 0
SHL BX, 1
 
MOV BX, 0
SHL BX, 1
 
MOV AX, 2
MOV c1_1[BX], AX 

 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
 
MOV AX, 69
MOV c1_1[SI], AX 

 
 
MOV AX, a1_1
CMP AX, 0
JE L2
MOV AX, b1_1
CMP AX, 0
JE L2
MOV AX, 1
JMP L3
L2:
MOV AX, 0
L3:
MOV temp2, AX
MOV AX, temp2
CMP AX, 1
JNE L4
MOV AX, c1_1[BX]
MOV temp3, AX
INC AX
MOV c1_1[BX], AX

JMP L5
L4:
 
MOV BX, 1
SHL BX, 1
MOV SI, BX
 
MOV BX, 0
SHL BX, 1
 
MOV BX, 2
SHL BX, 1
MOV SI, BX
MOV AX, c1_1[BX]
ADD AX, c1_1[SI]
MOV temp3, AX

 
MOV BX, 1
SHL BX, 1
MOV SI, BX
MOV AX, temp3
MOV c1_1[SI], AX 

L5:

 
 
 
MOV BX, 1
SHL BX, 1
MOV AX, c1_1[BX]
MOV a1_1, AX 


MOV AX, a1_1
CALL OUTDEC


MOV AX, b1_1
CALL OUTDEC

MOV AH, 4CH
INT 21H
MAIN ENDP



------------------

ScopeTable #1
1 --> <main: ID> 

Total lines: 14
Total errors: 0
-------------------------------------
Optimizer log: 
Removed blank line : 20
Removed blank line : 21
Removed blank line : 22
Removed blank line : 23
Removed blank line : 24
Removed blank line : 25
Removed blank line : 26
Removed blank line : 27
Removed blank line : 37
Optimized redundant MOV operation: 38
Optimized redundant MOV operation: 40
Removed blank line : 48
Removed blank line : 49
Removed blank line : 50
Removed blank line : 51
Removed blank line : 64
Removed blank line : 67
Removed blank line : 70
Removed blank line : 74
Removed blank line : 78
Removed blank line : 82
Removed blank line : 86
Removed blank line : 87
Optimized redundant MOV operation: 100
Removed blank line : 110
Removed blank line : 114
Removed blank line : 117
Removed blank line : 125
Removed blank line : 134
Removed blank line : 135
Removed blank line : 136
Optimized redundant MOV operation: 143
Line removed:32
-------------------------------------

ScopeTable #1
1 --> <main: ID> 
