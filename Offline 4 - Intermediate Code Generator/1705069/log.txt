Line no: 1 type_specifier	: INT

------------------
int

 

------------------
Line no: 1 type_specifier	: INT

------------------
int

 

------------------
Line no: 1 parameter_list : type_specifier ID

------------------
int a

 

------------------
Line no: 1 type_specifier	: INT

------------------
int

 

------------------
Line no: 1 parameter_list : parameter_list COMMA type_specifier ID

------------------
int a,int b

 

------------------

New ScopeTable #1_1 created
Line no: 2 variable : ID

------------------
a

 

------------------
Line no: 2 factor : variable

------------------
a

 

------------------
Line no: 2 unary_expression : factor

------------------
a

 

------------------
Line no: 2 term : unary_expression

------------------
a

 

------------------
Line no: 2 simple_expression : term

------------------
a

 

------------------
Line no: 2 variable : ID

------------------
b

 

------------------
Line no: 2 factor : variable

------------------
b

 

------------------
Line no: 2 unary_expression : factor

------------------
b

 

------------------
Line no: 2 term : unary_expression

------------------
b

 

------------------
Line no: 2 simple_expression : term

------------------
b

 

------------------
Line no: 2 rel_expression : simple_expression RELOP simple_expression

------------------
a>=b

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 


------------------
Line no: 2 logic_expression : rel_expression

------------------
a>=b

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 


------------------
Line no: 2 expression : logic_expression

------------------
a>=b

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 


------------------

New ScopeTable #1_1_1 created
Line no: 3 variable : ID

------------------
a

 

------------------
Line no: 3 factor : variable

------------------
a

 

------------------
Line no: 3 unary_expression : factor

------------------
a

 

------------------
Line no: 3 term : unary_expression

------------------
a

 

------------------
Line no: 3 simple_expression : term

------------------
a

 

------------------
Line no: 3 rel_expression : simple_expression

------------------
a

 

------------------
Line no: 3 logic_expression : rel_expression

------------------
a

 

------------------
Line no: 3 expression : logic_expression

------------------
a

 

------------------
Line no: 3 RETURN expression SEMICOLON

------------------
return a;

 
MOV AX, a1_1

JMP L0

------------------
Line no: 3 statements : statement

------------------
return a;

 
MOV AX, a1_1

JMP L0

------------------
Line no: 4 compound_statement : LCURL statements RCURL

------------------
{
return a;
}


 
MOV AX, a1_1

JMP L0

------------------

ScopeTable #1_1_1

ScopeTable #1_1
0 --> <b: ID> 
6 --> <a: ID> 

ScopeTable #1
5 --> <max2: ID> 
Line no: 4 statement : compound_statement

------------------
{
return a;
}


 
MOV AX, a1_1

JMP L0

------------------

New ScopeTable #1_1_2 created
Line no: 5 variable : ID

------------------
b

 

------------------
Line no: 5 factor : variable

------------------
b

 

------------------
Line no: 5 unary_expression : factor

------------------
b

 

------------------
Line no: 5 term : unary_expression

------------------
b

 

------------------
Line no: 5 simple_expression : term

------------------
b

 

------------------
Line no: 5 rel_expression : simple_expression

------------------
b

 

------------------
Line no: 5 logic_expression : rel_expression

------------------
b

 

------------------
Line no: 5 expression : logic_expression

------------------
b

 

------------------
Line no: 5 RETURN expression SEMICOLON

------------------
return b;

 
MOV AX, b1_1

JMP L0

------------------
Line no: 5 statements : statement

------------------
return b;

 
MOV AX, b1_1

JMP L0

------------------
Line no: 6 compound_statement : LCURL statements RCURL

------------------
{
return b;
}


 
MOV AX, b1_1

JMP L0

------------------

ScopeTable #1_1_2

ScopeTable #1_1
0 --> <b: ID> 
6 --> <a: ID> 

ScopeTable #1
5 --> <max2: ID> 
Line no: 6 statement : compound_statement

------------------
{
return b;
}


 
MOV AX, b1_1

JMP L0

------------------
Line no: 6 IF LPAREN expression RPAREN statement ELSE statement

------------------
if(a>=b){
return a;
}
else {
return b;
}


 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:


------------------
Line no: 6 statements : statement

------------------
if(a>=b){
return a;
}
else {
return b;
}


 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:


------------------
Line no: 7 compound_statement : LCURL statements RCURL

------------------
{
if(a>=b){
return a;
}
else {
return b;
}

}


 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:


------------------

ScopeTable #1_1
0 --> <b: ID> 
6 --> <a: ID> 

ScopeTable #1
5 --> <max2: ID> 
Line no: 7 func_definition : type_specifier ID LPAREN parameter_list RPAREN

------------------
int max2 ( int a,int b ) {
if(a>=b){
return a;
}
else {
return b;
}

}


max2 PROC

POP return_loc
POP b1_1
POP a1_1
PUSH BX
PUSH CX
PUSH DX

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:

L0: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max2 ENDP



------------------
Line no: 7 unit : func_definition

------------------
int max2 ( int a,int b ) {
if(a>=b){
return a;
}
else {
return b;
}

}


max2 PROC

POP return_loc
POP b1_1
POP a1_1
PUSH BX
PUSH CX
PUSH DX

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:

L0: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max2 ENDP



------------------
Line no: 7 program : unit

------------------
int max2 ( int a,int b ) {
if(a>=b){
return a;
}
else {
return b;
}

}


max2 PROC

POP return_loc
POP b1_1
POP a1_1
PUSH BX
PUSH CX
PUSH DX

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:

L0: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max2 ENDP



------------------

ScopeTable #1
5 --> <max2: ID> 
Line no: 9 type_specifier	: INT

------------------
int

 

------------------
Line no: 9 type_specifier	: INT

------------------
int

 

------------------
Line no: 9 parameter_list : type_specifier ID

------------------
int a

 

------------------
Line no: 9 type_specifier	: INT

------------------
int

 

------------------
Line no: 9 parameter_list : parameter_list COMMA type_specifier ID

------------------
int a,int b

 

------------------
Line no: 9 type_specifier	: INT

------------------
int

 

------------------
Line no: 9 parameter_list : parameter_list COMMA type_specifier ID

------------------
int a,int b,int c

 

------------------

New ScopeTable #1_2 created
Line no: 10 type_specifier	: INT

------------------
int

 

------------------
Line no: 10 declaration_list : ID

------------------
maxab

 

------------------
Line no: 10 var_declaration : type_specifier declaration_list SEMICOLON

------------------
int maxab;

 

------------------
Line no: 10 statement : var_declaration

------------------
int maxab;

 

------------------
Line no: 10 statements : statement

------------------
int maxab;

 

------------------
Line no: 11 variable : ID

------------------
maxab

 

------------------
Line no: 11 variable : ID

------------------
a

 

------------------
Line no: 11 factor : variable

------------------
a

 

------------------
Line no: 11 unary_expression : factor

------------------
a

 

------------------
Line no: 11 term : unary_expression

------------------
a

 

------------------
Line no: 11 simple_expression : term

------------------
a

 

------------------
Line no: 11 rel_expression : simple_expression

------------------
a

 

------------------
Line no: 11 logic_expression : rel_expression

------------------
a

 

------------------
Line no: 11 arguments : logic_expression

------------------
a

 

------------------
Line no: 11 variable : ID

------------------
b

 

------------------
Line no: 11 factor : variable

------------------
b

 

------------------
Line no: 11 unary_expression : factor

------------------
b

 

------------------
Line no: 11 term : unary_expression

------------------
b

 

------------------
Line no: 11 simple_expression : term

------------------
b

 

------------------
Line no: 11 rel_expression : simple_expression

------------------
b

 

------------------
Line no: 11 logic_expression : rel_expression

------------------
b

 

------------------
Line no: 11 arguments : arguments COMMA logic_expression

------------------
a, b

 

------------------
Line no: 11 argument_list : arguments

------------------
a, b

 

------------------
Line no: 11 factor : ID LPAREN argument_list RPAREN

------------------
max2(a, b)

 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc

------------------
Line no: 11 unary_expression : factor

------------------
max2(a, b)

 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc

------------------
Line no: 11 term : unary_expression

------------------
max2(a, b)

 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc

------------------
Line no: 11 simple_expression : term

------------------
max2(a, b)

 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc

------------------
Line no: 11 rel_expression : simple_expression

------------------
max2(a, b)

 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc

------------------
Line no: 11 logic_expression : rel_expression

------------------
max2(a, b)

 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc

------------------
Line no: 11 expression : variable ASSIGNOP logic_expression

------------------
maxab=max2(a, b)

 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 


------------------
Line no: 11 expression_statement : expression SEMICOLON

------------------
maxab=max2(a, b);

 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 


------------------
Line no: 11 statement : expression_statement

------------------
maxab=max2(a, b);

 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 


------------------
Line no: 11 statements : statements statement

------------------
int maxab;
maxab=max2(a, b);

 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 


------------------
Line no: 12 variable : ID

------------------
c

 

------------------
Line no: 12 factor : variable

------------------
c

 

------------------
Line no: 12 unary_expression : factor

------------------
c

 

------------------
Line no: 12 term : unary_expression

------------------
c

 

------------------
Line no: 12 simple_expression : term

------------------
c

 

------------------
Line no: 12 rel_expression : simple_expression

------------------
c

 

------------------
Line no: 12 logic_expression : rel_expression

------------------
c

 

------------------
Line no: 12 arguments : logic_expression

------------------
c

 

------------------
Line no: 12 variable : ID

------------------
maxab

 

------------------
Line no: 12 factor : variable

------------------
maxab

 

------------------
Line no: 12 unary_expression : factor

------------------
maxab

 

------------------
Line no: 12 term : unary_expression

------------------
maxab

 

------------------
Line no: 12 simple_expression : term

------------------
maxab

 

------------------
Line no: 12 rel_expression : simple_expression

------------------
maxab

 

------------------
Line no: 12 logic_expression : rel_expression

------------------
maxab

 

------------------
Line no: 12 arguments : arguments COMMA logic_expression

------------------
c, maxab

 

------------------
Line no: 12 argument_list : arguments

------------------
c, maxab

 

------------------
Line no: 12 factor : ID LPAREN argument_list RPAREN

------------------
max2(c, maxab)

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc

------------------
Line no: 12 unary_expression : factor

------------------
max2(c, maxab)

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc

------------------
Line no: 12 term : unary_expression

------------------
max2(c, maxab)

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc

------------------
Line no: 12 simple_expression : term

------------------
max2(c, maxab)

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc

------------------
Line no: 12 rel_expression : simple_expression

------------------
max2(c, maxab)

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc

------------------
Line no: 12 logic_expression : rel_expression

------------------
max2(c, maxab)

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc

------------------
Line no: 12 expression : logic_expression

------------------
max2(c, maxab)

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc

------------------
Line no: 12 RETURN expression SEMICOLON

------------------
return max2(c, maxab);

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5

------------------
Line no: 12 statements : statements statement

------------------
int maxab;
maxab=max2(a, b);
return max2(c, maxab);

 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5

------------------
Line no: 13 compound_statement : LCURL statements RCURL

------------------
{
int maxab;
maxab=max2(a, b);
return max2(c, maxab);
}


 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5

------------------

ScopeTable #1_2
0 --> <b: ID> 
1 --> <c: ID> 
3 --> <maxab: ID> 
6 --> <a: ID> 

ScopeTable #1
5 --> <max2: ID> 
6 --> <max3: ID> 
Line no: 13 func_definition : type_specifier ID LPAREN parameter_list RPAREN

------------------
int max3 ( int a,int b,int c ) {
int maxab;
maxab=max2(a, b);
return max2(c, maxab);
}


max3 PROC

POP return_loc
POP c1_2
POP b1_2
POP a1_2
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5
L5: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max3 ENDP



------------------
Line no: 13 unit : func_definition

------------------
int max3 ( int a,int b,int c ) {
int maxab;
maxab=max2(a, b);
return max2(c, maxab);
}


max3 PROC

POP return_loc
POP c1_2
POP b1_2
POP a1_2
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5
L5: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max3 ENDP



------------------
Line no: 13 program : program unit

------------------
int max2 ( int a,int b ) {
if(a>=b){
return a;
}
else {
return b;
}

}

int max3 ( int a,int b,int c ) {
int maxab;
maxab=max2(a, b);
return max2(c, maxab);
}


max2 PROC

POP return_loc
POP b1_1
POP a1_1
PUSH BX
PUSH CX
PUSH DX

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:

L0: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max2 ENDP


max3 PROC

POP return_loc
POP c1_2
POP b1_2
POP a1_2
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5
L5: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max3 ENDP



------------------
Line no: 15 type_specifier	: INT

------------------
int

 

------------------
Line no: 15 type_specifier	: INT

------------------
int

 

------------------
Line no: 15 parameter_list : type_specifier ID

------------------
int a

 

------------------
Line no: 15 type_specifier	: INT

------------------
int

 

------------------
Line no: 15 parameter_list : parameter_list COMMA type_specifier ID

------------------
int a,int b

 

------------------
Line no: 15 type_specifier	: INT

------------------
int

 

------------------
Line no: 15 parameter_list : parameter_list COMMA type_specifier ID

------------------
int a,int b,int c

 

------------------
Line no: 15 type_specifier	: INT

------------------
int

 

------------------
Line no: 15 parameter_list : parameter_list COMMA type_specifier ID

------------------
int a,int b,int c,int d

 

------------------

New ScopeTable #1_3 created
Line no: 16 type_specifier	: INT

------------------
int

 

------------------
Line no: 16 declaration_list : ID

------------------
maxabc

 

------------------
Line no: 16 var_declaration : type_specifier declaration_list SEMICOLON

------------------
int maxabc;

 

------------------
Line no: 16 statement : var_declaration

------------------
int maxabc;

 

------------------
Line no: 16 statements : statement

------------------
int maxabc;

 

------------------
Line no: 17 variable : ID

------------------
maxabc

 

------------------
Line no: 17 variable : ID

------------------
a

 

------------------
Line no: 17 factor : variable

------------------
a

 

------------------
Line no: 17 unary_expression : factor

------------------
a

 

------------------
Line no: 17 term : unary_expression

------------------
a

 

------------------
Line no: 17 simple_expression : term

------------------
a

 

------------------
Line no: 17 rel_expression : simple_expression

------------------
a

 

------------------
Line no: 17 logic_expression : rel_expression

------------------
a

 

------------------
Line no: 17 arguments : logic_expression

------------------
a

 

------------------
Line no: 17 variable : ID

------------------
b

 

------------------
Line no: 17 factor : variable

------------------
b

 

------------------
Line no: 17 unary_expression : factor

------------------
b

 

------------------
Line no: 17 term : unary_expression

------------------
b

 

------------------
Line no: 17 simple_expression : term

------------------
b

 

------------------
Line no: 17 rel_expression : simple_expression

------------------
b

 

------------------
Line no: 17 logic_expression : rel_expression

------------------
b

 

------------------
Line no: 17 arguments : arguments COMMA logic_expression

------------------
a, b

 

------------------
Line no: 17 variable : ID

------------------
c

 

------------------
Line no: 17 factor : variable

------------------
c

 

------------------
Line no: 17 unary_expression : factor

------------------
c

 

------------------
Line no: 17 term : unary_expression

------------------
c

 

------------------
Line no: 17 simple_expression : term

------------------
c

 

------------------
Line no: 17 rel_expression : simple_expression

------------------
c

 

------------------
Line no: 17 logic_expression : rel_expression

------------------
c

 

------------------
Line no: 17 arguments : arguments COMMA logic_expression

------------------
a, b, c

 

------------------
Line no: 17 argument_list : arguments

------------------
a, b, c

 

------------------
Line no: 17 factor : ID LPAREN argument_list RPAREN

------------------
max3(a, b, c)

 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc

------------------
Line no: 17 unary_expression : factor

------------------
max3(a, b, c)

 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc

------------------
Line no: 17 term : unary_expression

------------------
max3(a, b, c)

 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc

------------------
Line no: 17 simple_expression : term

------------------
max3(a, b, c)

 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc

------------------
Line no: 17 rel_expression : simple_expression

------------------
max3(a, b, c)

 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc

------------------
Line no: 17 logic_expression : rel_expression

------------------
max3(a, b, c)

 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc

------------------
Line no: 17 expression : variable ASSIGNOP logic_expression

------------------
maxabc=max3(a, b, c)

 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 


------------------
Line no: 17 expression_statement : expression SEMICOLON

------------------
maxabc=max3(a, b, c);

 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 


------------------
Line no: 17 statement : expression_statement

------------------
maxabc=max3(a, b, c);

 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 


------------------
Line no: 17 statements : statements statement

------------------
int maxabc;
maxabc=max3(a, b, c);

 
 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 


------------------
Line no: 18 variable : ID

------------------
maxabc

 

------------------
Line no: 18 factor : variable

------------------
maxabc

 

------------------
Line no: 18 unary_expression : factor

------------------
maxabc

 

------------------
Line no: 18 term : unary_expression

------------------
maxabc

 

------------------
Line no: 18 simple_expression : term

------------------
maxabc

 

------------------
Line no: 18 rel_expression : simple_expression

------------------
maxabc

 

------------------
Line no: 18 logic_expression : rel_expression

------------------
maxabc

 

------------------
Line no: 18 arguments : logic_expression

------------------
maxabc

 

------------------
Line no: 18 variable : ID

------------------
d

 

------------------
Line no: 18 factor : variable

------------------
d

 

------------------
Line no: 18 unary_expression : factor

------------------
d

 

------------------
Line no: 18 term : unary_expression

------------------
d

 

------------------
Line no: 18 simple_expression : term

------------------
d

 

------------------
Line no: 18 rel_expression : simple_expression

------------------
d

 

------------------
Line no: 18 logic_expression : rel_expression

------------------
d

 

------------------
Line no: 18 arguments : arguments COMMA logic_expression

------------------
maxabc, d

 

------------------
Line no: 18 argument_list : arguments

------------------
maxabc, d

 

------------------
Line no: 18 factor : ID LPAREN argument_list RPAREN

------------------
max2(maxabc, d)

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc

------------------
Line no: 18 unary_expression : factor

------------------
max2(maxabc, d)

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc

------------------
Line no: 18 term : unary_expression

------------------
max2(maxabc, d)

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc

------------------
Line no: 18 simple_expression : term

------------------
max2(maxabc, d)

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc

------------------
Line no: 18 rel_expression : simple_expression

------------------
max2(maxabc, d)

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc

------------------
Line no: 18 logic_expression : rel_expression

------------------
max2(maxabc, d)

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc

------------------
Line no: 18 expression : logic_expression

------------------
max2(maxabc, d)

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc

------------------
Line no: 18 RETURN expression SEMICOLON

------------------
return max2(maxabc, d);

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc
MOV AX, AX

JMP L6

------------------
Line no: 18 statements : statements statement

------------------
int maxabc;
maxabc=max3(a, b, c);
return max2(maxabc, d);

 
 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc
MOV AX, AX

JMP L6

------------------
Line no: 19 compound_statement : LCURL statements RCURL

------------------
{
int maxabc;
maxabc=max3(a, b, c);
return max2(maxabc, d);
}


 
 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc
MOV AX, AX

JMP L6

------------------

ScopeTable #1_3
0 --> <b: ID> 
1 --> <c: ID> 
2 --> <d: ID> 
4 --> <maxabc: ID> 
6 --> <a: ID> 

ScopeTable #1
0 --> <max4: ID> 
5 --> <max2: ID> 
6 --> <max3: ID> 
Line no: 19 func_definition : type_specifier ID LPAREN parameter_list RPAREN

------------------
int max4 ( int a,int b,int c,int d ) {
int maxabc;
maxabc=max3(a, b, c);
return max2(maxabc, d);
}


max4 PROC

POP return_loc
POP d1_3
POP c1_3
POP b1_3
POP a1_3
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc
MOV AX, AX

JMP L6
L6: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max4 ENDP



------------------
Line no: 19 unit : func_definition

------------------
int max4 ( int a,int b,int c,int d ) {
int maxabc;
maxabc=max3(a, b, c);
return max2(maxabc, d);
}


max4 PROC

POP return_loc
POP d1_3
POP c1_3
POP b1_3
POP a1_3
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc
MOV AX, AX

JMP L6
L6: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max4 ENDP



------------------
Line no: 19 program : program unit

------------------
int max2 ( int a,int b ) {
if(a>=b){
return a;
}
else {
return b;
}

}

int max3 ( int a,int b,int c ) {
int maxab;
maxab=max2(a, b);
return max2(c, maxab);
}

int max4 ( int a,int b,int c,int d ) {
int maxabc;
maxabc=max3(a, b, c);
return max2(maxabc, d);
}


max2 PROC

POP return_loc
POP b1_1
POP a1_1
PUSH BX
PUSH CX
PUSH DX

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:

L0: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max2 ENDP


max3 PROC

POP return_loc
POP c1_2
POP b1_2
POP a1_2
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5
L5: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max3 ENDP


max4 PROC

POP return_loc
POP d1_3
POP c1_3
POP b1_3
POP a1_3
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc
MOV AX, AX

JMP L6
L6: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max4 ENDP



------------------
Line no: 21 type_specifier	: INT

------------------
int

 

------------------

New ScopeTable #1_4 created
Line no: 22 type_specifier	: INT

------------------
int

 

------------------
Line no: 22 declaration_list : ID

------------------
a

 

------------------
Line no: 22 declaration_list : declaration_list COMMA ID

------------------
a, b

 

------------------
Line no: 22 declaration_list : declaration_list COMMA ID

------------------
a, b, c

 

------------------
Line no: 22 declaration_list : declaration_list COMMA ID

------------------
a, b, c, d

 

------------------
Line no: 22 declaration_list : declaration_list COMMA ID

------------------
a, b, c, d, max

 

------------------
Line no: 22 var_declaration : type_specifier declaration_list SEMICOLON

------------------
int a, b, c, d, max;

 

------------------
Line no: 22 statement : var_declaration

------------------
int a, b, c, d, max;

 

------------------
Line no: 22 statements : statement

------------------
int a, b, c, d, max;

 

------------------
Line no: 23 variable : ID

------------------
a

 

------------------
Line no: 23 factor : CONST_INT

------------------
20

 

------------------
Line no: 23 unary_expression : factor

------------------
20

 

------------------
Line no: 23 term : unary_expression

------------------
20

 

------------------
Line no: 23 factor : CONST_INT

------------------
1

 

------------------
Line no: 23 unary_expression : factor

------------------
1

 

------------------
Line no: 23 term : term MULOP unary_expression

------------------
20*1

 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX


------------------
Line no: 23 simple_expression : term

------------------
20*1

 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX


------------------
Line no: 23 rel_expression : simple_expression

------------------
20*1

 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX


------------------
Line no: 23 logic_expression : rel_expression

------------------
20*1

 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX


------------------
Line no: 23 expression : variable ASSIGNOP logic_expression

------------------
a=20*1

 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 


------------------
Line no: 23 expression_statement : expression SEMICOLON

------------------
a=20*1;

 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 


------------------
Line no: 23 statement : expression_statement

------------------
a=20*1;

 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 


------------------
Line no: 23 statements : statements statement

------------------
int a, b, c, d, max;
a=20*1;

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 


------------------
Line no: 24 variable : ID

------------------
b

 

------------------
Line no: 24 factor : CONST_INT

------------------
69

 

------------------
Line no: 24 unary_expression : factor

------------------
69

 

------------------
Line no: 24 term : unary_expression

------------------
69

 

------------------
Line no: 24 simple_expression : term

------------------
69

 

------------------
Line no: 24 factor : CONST_INT

------------------
0

 

------------------
Line no: 24 unary_expression : factor

------------------
0

 

------------------
Line no: 24 term : unary_expression

------------------
0

 

------------------
Line no: 24 simple expression : simple_expression ADDOP term

------------------
69+0

 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX


------------------
Line no: 24 rel_expression : simple_expression

------------------
69+0

 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX


------------------
Line no: 24 logic_expression : rel_expression

------------------
69+0

 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX


------------------
Line no: 24 expression : variable ASSIGNOP logic_expression

------------------
b=69+0

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 


------------------
Line no: 24 expression_statement : expression SEMICOLON

------------------
b=69+0;

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 


------------------
Line no: 24 statement : expression_statement

------------------
b=69+0;

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 


------------------
Line no: 24 statements : statements statement

------------------
int a, b, c, d, max;
a=20*1;
b=69+0;

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 


------------------
Line no: 25 variable : ID

------------------
c

 

------------------
Line no: 25 factor : CONST_INT

------------------
1

 

------------------
Line no: 25 unary_expression : factor

------------------
1

 

------------------
Line no: 25 term : unary_expression

------------------
1

 

------------------
Line no: 25 simple_expression : term

------------------
1

 

------------------
Line no: 25 rel_expression : simple_expression

------------------
1

 

------------------
Line no: 25 logic_expression : rel_expression

------------------
1

 

------------------
Line no: 25 expression : variable ASSIGNOP logic_expression

------------------
c=1

 
 
MOV AX, 1
MOV c1_4, AX 


------------------
Line no: 25 expression_statement : expression SEMICOLON

------------------
c=1;

 
 
MOV AX, 1
MOV c1_4, AX 


------------------
Line no: 25 statement : expression_statement

------------------
c=1;

 
 
MOV AX, 1
MOV c1_4, AX 


------------------
Line no: 25 statements : statements statement

------------------
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 


------------------
Line no: 26 variable : ID

------------------
d

 

------------------
Line no: 26 factor : CONST_INT

------------------
35

 

------------------
Line no: 26 unary_expression : factor

------------------
35

 

------------------
Line no: 26 term : unary_expression

------------------
35

 

------------------
Line no: 26 simple_expression : term

------------------
35

 

------------------
Line no: 26 rel_expression : simple_expression

------------------
35

 

------------------
Line no: 26 logic_expression : rel_expression

------------------
35

 

------------------
Line no: 26 expression : variable ASSIGNOP logic_expression

------------------
d=35

 
 
MOV AX, 35
MOV d1_4, AX 


------------------
Line no: 26 expression_statement : expression SEMICOLON

------------------
d=35;

 
 
MOV AX, 35
MOV d1_4, AX 


------------------
Line no: 26 statement : expression_statement

------------------
d=35;

 
 
MOV AX, 35
MOV d1_4, AX 


------------------
Line no: 26 statements : statements statement

------------------
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;
d=35;

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 

 
 
MOV AX, 35
MOV d1_4, AX 


------------------
Line no: 27 variable : ID

------------------
max

 

------------------
Line no: 27 variable : ID

------------------
a

 

------------------
Line no: 27 factor : variable

------------------
a

 

------------------
Line no: 27 unary_expression : factor

------------------
a

 

------------------
Line no: 27 term : unary_expression

------------------
a

 

------------------
Line no: 27 simple_expression : term

------------------
a

 

------------------
Line no: 27 rel_expression : simple_expression

------------------
a

 

------------------
Line no: 27 logic_expression : rel_expression

------------------
a

 

------------------
Line no: 27 arguments : logic_expression

------------------
a

 

------------------
Line no: 27 variable : ID

------------------
b

 

------------------
Line no: 27 factor : variable

------------------
b

 

------------------
Line no: 27 unary_expression : factor

------------------
b

 

------------------
Line no: 27 term : unary_expression

------------------
b

 

------------------
Line no: 27 simple_expression : term

------------------
b

 

------------------
Line no: 27 rel_expression : simple_expression

------------------
b

 

------------------
Line no: 27 logic_expression : rel_expression

------------------
b

 

------------------
Line no: 27 arguments : arguments COMMA logic_expression

------------------
a, b

 

------------------
Line no: 27 variable : ID

------------------
c

 

------------------
Line no: 27 factor : variable

------------------
c

 

------------------
Line no: 27 unary_expression : factor

------------------
c

 

------------------
Line no: 27 term : unary_expression

------------------
c

 

------------------
Line no: 27 simple_expression : term

------------------
c

 

------------------
Line no: 27 rel_expression : simple_expression

------------------
c

 

------------------
Line no: 27 logic_expression : rel_expression

------------------
c

 

------------------
Line no: 27 arguments : arguments COMMA logic_expression

------------------
a, b, c

 

------------------
Line no: 27 variable : ID

------------------
d

 

------------------
Line no: 27 factor : variable

------------------
d

 

------------------
Line no: 27 unary_expression : factor

------------------
d

 

------------------
Line no: 27 term : unary_expression

------------------
d

 

------------------
Line no: 27 simple_expression : term

------------------
d

 

------------------
Line no: 27 rel_expression : simple_expression

------------------
d

 

------------------
Line no: 27 logic_expression : rel_expression

------------------
d

 

------------------
Line no: 27 arguments : arguments COMMA logic_expression

------------------
a, b, c, d

 

------------------
Line no: 27 argument_list : arguments

------------------
a, b, c, d

 

------------------
Line no: 27 factor : ID LPAREN argument_list RPAREN

------------------
max4(a, b, c, d)

 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc

------------------
Line no: 27 unary_expression : factor

------------------
max4(a, b, c, d)

 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc

------------------
Line no: 27 term : unary_expression

------------------
max4(a, b, c, d)

 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc

------------------
Line no: 27 simple_expression : term

------------------
max4(a, b, c, d)

 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc

------------------
Line no: 27 rel_expression : simple_expression

------------------
max4(a, b, c, d)

 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc

------------------
Line no: 27 logic_expression : rel_expression

------------------
max4(a, b, c, d)

 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc

------------------
Line no: 27 expression : variable ASSIGNOP logic_expression

------------------
max=max4(a, b, c, d)

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


------------------
Line no: 27 expression_statement : expression SEMICOLON

------------------
max=max4(a, b, c, d);

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


------------------
Line no: 27 statement : expression_statement

------------------
max=max4(a, b, c, d);

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


------------------
Line no: 27 statements : statements statement

------------------
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;
d=35;
max=max4(a, b, c, d);

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 

 
 
MOV AX, 35
MOV d1_4, AX 

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


------------------
Line no: 28 PRINTLN LPAREN ID RPAREN SEMICOLON

------------------
printf(max);

 

------------------
-1
Line no: 28 statements : statements statement

------------------
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;
d=35;
max=max4(a, b, c, d);
printf(max);

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 

 
 
MOV AX, 35
MOV d1_4, AX 

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


MOV AX, max1_4
CALL OUTDEC


------------------
Line no: 29 compound_statement : LCURL statements RCURL

------------------
{
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;
d=35;
max=max4(a, b, c, d);
printf(max);
}


 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 

 
 
MOV AX, 35
MOV d1_4, AX 

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


MOV AX, max1_4
CALL OUTDEC


------------------

ScopeTable #1_4
0 --> <b: ID> 
1 --> <c: ID> 
2 --> <d: ID> 
4 --> <max: ID> 
6 --> <a: ID> 

ScopeTable #1
0 --> <max4: ID> 
1 --> <main: ID> 
5 --> <max2: ID> 
6 --> <max3: ID> 
Line no: 29 func_definition : type_specifier ID LPAREN RPAREN compound_statement

------------------
int main ( ) {
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;
d=35;
max=max4(a, b, c, d);
printf(max);
}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 

 
 
MOV AX, 35
MOV d1_4, AX 

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


MOV AX, max1_4
CALL OUTDEC

MOV AH, 4CH
INT 21H
MAIN ENDP



------------------
Line no: 29 unit : func_definition

------------------
int main ( ) {
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;
d=35;
max=max4(a, b, c, d);
printf(max);
}


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 

 
 
MOV AX, 35
MOV d1_4, AX 

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


MOV AX, max1_4
CALL OUTDEC

MOV AH, 4CH
INT 21H
MAIN ENDP



------------------
Line no: 29 program : program unit

------------------
int max2 ( int a,int b ) {
if(a>=b){
return a;
}
else {
return b;
}

}

int max3 ( int a,int b,int c ) {
int maxab;
maxab=max2(a, b);
return max2(c, maxab);
}

int max4 ( int a,int b,int c,int d ) {
int maxabc;
maxabc=max3(a, b, c);
return max2(maxabc, d);
}

int main ( ) {
int a, b, c, d, max;
a=20*1;
b=69+0;
c=1;
d=35;
max=max4(a, b, c, d);
printf(max);
}


max2 PROC

POP return_loc
POP b1_1
POP a1_1
PUSH BX
PUSH CX
PUSH DX

 
 
MOV AX, a1_1
CMP AX, b1_1
JGE L1
MOV temp0, 0
JMP L2
L1: 
MOV temp0, 1
L2: 

MOV AX, temp0
CMP AX, 1
JNE L3
 
MOV AX, a1_1

JMP L0
JMP L4
L3:
 
MOV AX, b1_1

JMP L0
L4:

L0: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max2 ENDP


max3 PROC

POP return_loc
POP c1_2
POP b1_2
POP a1_2
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_2
PUSH b1_2
CALL max2
POP return_loc
MOV AX, AX
MOV maxab1_2, AX 

 
PUSH return_loc
PUSH c1_2
PUSH maxab1_2
CALL max2
POP return_loc
MOV AX, AX

JMP L5
L5: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max3 ENDP


max4 PROC

POP return_loc
POP d1_3
POP c1_3
POP b1_3
POP a1_3
PUSH BX
PUSH CX
PUSH DX

 
 
 
PUSH return_loc
PUSH a1_3
PUSH b1_3
PUSH c1_3
CALL max3
POP return_loc
MOV AX, AX
MOV maxabc1_3, AX 

 
PUSH return_loc
PUSH maxabc1_3
PUSH d1_3
CALL max2
POP return_loc
MOV AX, AX

JMP L6
L6: 
POP DX
POP CX
POP BX
PUSH return_loc
RET
max4 ENDP


MAIN PROC 

MOV AX,@DATA
MOV DS,AX

 
 
 
 
 
MOV AX, 20
MOV BX, 1
IMUL BX
MOV temp0, AX

MOV AX, temp0
MOV a1_4, AX 

 
 
 
MOV AX, 69
ADD AX, 0
MOV temp0, AX

MOV AX, temp0
MOV b1_4, AX 

 
 
MOV AX, 1
MOV c1_4, AX 

 
 
MOV AX, 35
MOV d1_4, AX 

 
 
PUSH return_loc
PUSH a1_4
PUSH b1_4
PUSH c1_4
PUSH d1_4
CALL max4
POP return_loc
MOV AX, AX
MOV max1_4, AX 


MOV AX, max1_4
CALL OUTDEC

MOV AH, 4CH
INT 21H
MAIN ENDP



------------------

Total lines: 29
Total errors: 0
-------------------------------------
Optimizer log: 
Removed blank line : 34
Removed blank line : 35
Removed blank line : 48
Removed blank line : 54
Removed blank line : 79
Removed blank line : 80
Removed blank line : 81
Optimized redundant reg to reg assignment: 87
Removed blank line : 90
Optimized redundant reg to reg assignment: 96
Removed blank line : 119
Removed blank line : 120
Removed blank line : 121
Optimized redundant reg to reg assignment: 128
Removed blank line : 131
Optimized redundant reg to reg assignment: 137
Removed blank line : 154
Removed blank line : 155
Removed blank line : 156
Removed blank line : 157
Removed blank line : 158
Optimized redundant arithmetic operation : 161
Optimized redundant MOV operation: 164
Removed blank line : 167
Removed blank line : 168
Removed blank line : 169
Optimized redundant arithmetic operation : 171
Optimized redundant MOV operation: 174
Removed blank line : 177
Removed blank line : 178
Removed blank line : 182
Removed blank line : 183
Removed blank line : 187
Removed blank line : 188
Optimized redundant reg to reg assignment: 196
Optimized redundant MOV operation: 200
Line removed:36
-------------------------------------

ScopeTable #1
0 --> <max4: ID> 
1 --> <main: ID> 
5 --> <max2: ID> 
6 --> <max3: ID> 
