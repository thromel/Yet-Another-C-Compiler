Terminals which are not used

   DO
   SWITCH
   DEFAULT
   BREAK
   CHAR
   DOUBLE
   CASE
   CONTINUE
   STRING
   CONST_CHAR
   BITOP


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_definition
    6     | func_declaration

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 @1: /* empty */

   10 func_definition: type_specifier ID LPAREN RPAREN @1 compound_statement

   11 @2: /* empty */

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN @2 compound_statement

   13 parameter_list: parameter_list COMMA type_specifier ID
   14               | parameter_list COMMA type_specifier
   15               | type_specifier ID
   16               | type_specifier
   17               | parameter_list COMMA error ID
   18               | error ID

   19 var_declaration: type_specifier declaration_list SEMICOLON
   20                | type_specifier declaration_list error

   21 type_specifier: INT
   22               | FLOAT
   23               | VOID

   24 declaration_list: declaration_list COMMA ID
   25                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   26                 | ID
   27                 | ID LTHIRD CONST_INT RTHIRD
   28                 | ID LTHIRD error RTHIRD
   29                 | declaration_list COMMA ID LTHIRD error RTHIRD

   30 statements: statement
   31           | statements statement

   32 statement: var_declaration
   33          | expression_statement
   34          | compound_statement
   35          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement ELSE statement
   38          | WHILE LPAREN expression RPAREN statement
   39          | PRINTLN LPAREN ID RPAREN SEMICOLON
   40          | RETURN expression SEMICOLON

   41 expression_statement: SEMICOLON
   42                     | expression SEMICOLON
   43                     | expression error

   44 expression: logic_expression
   45           | variable ASSIGNOP logic_expression

   46 logic_expression: rel_expression
   47                 | rel_expression LOGICOP rel_expression

   48 rel_expression: simple_expression
   49               | simple_expression RELOP simple_expression

   50 simple_expression: term
   51                  | simple_expression ADDOP term

   52 term: unary_expression
   53     | term MULOP unary_expression

   54 unary_expression: factor
   55                 | ADDOP unary_expression
   56                 | NOT unary_expression

   57 factor: variable
   58       | CONST_INT
   59       | CONST_FLOAT
   60       | variable INCOP
   61       | variable DECOP
   62       | LPAREN expression RPAREN
   63       | LPAREN expression error
   64       | ID LPAREN argument_list RPAREN

   65 variable: ID
   66         | ID LTHIRD expression RTHIRD

   67 @3: /* empty */

   68 compound_statement: LCURL @3 statements RCURL

   69 @4: /* empty */

   70 compound_statement: LCURL @4 RCURL

   71 argument_list: arguments

   72 arguments: arguments COMMA logic_expression
   73          | logic_expression
   74          | arguments COMMA error


Terminals, with rules where they appear

$end (0) 0
error (256) 17 18 20 28 29 43 63 74
IF (258) 36 37
FOR (259) 35
DO (260)
INT (261) 21
FLOAT (262) 22
VOID (263) 23
SWITCH (264)
DEFAULT (265)
ELSE (266) 37
WHILE (267) 38
BREAK (268)
CHAR (269)
DOUBLE (270)
RETURN (271) 40
CASE (272)
CONTINUE (273)
INCOP (274) 60
DECOP (275) 61
NOT (276) 56
LPAREN (277) 7 8 10 12 35 36 37 38 39 62 63 64
RPAREN (278) 7 8 10 12 35 36 37 38 39 62 64
LCURL (279) 68 70
RCURL (280) 68 70
LTHIRD (281) 25 27 28 29 66
RTHIRD (282) 25 27 28 29 66
COMMA (283) 13 14 17 24 25 29 72 74
SEMICOLON (284) 7 8 19 39 40 41 42
PRINTLN (285) 39
STRING (286)
ID (287) 7 8 10 12 13 15 17 18 24 25 26 27 28 29 39 64 65 66
CONST_INT (288) 25 27 58
CONST_FLOAT (289) 59
CONST_CHAR (290)
ADDOP (291) 51 55
MULOP (292) 53
LOGICOP (293) 47
RELOP (294) 49
BITOP (295)
ASSIGNOP (296) 45
second_prec (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
program (45)
    on left: 2 3, on right: 1 2
unit (46)
    on left: 4 5 6, on right: 2 3
func_declaration (47)
    on left: 7 8, on right: 6
func_definition (48)
    on left: 10 12, on right: 5
@1 (49)
    on left: 9, on right: 10
@2 (50)
    on left: 11, on right: 12
parameter_list (51)
    on left: 13 14 15 16 17 18, on right: 7 12 13 14 17
var_declaration (52)
    on left: 19 20, on right: 4 32
type_specifier (53)
    on left: 21 22 23, on right: 7 8 10 12 13 14 15 16 19 20
declaration_list (54)
    on left: 24 25 26 27 28 29, on right: 19 20 24 25 29
statements (55)
    on left: 30 31, on right: 31 68
statement (56)
    on left: 32 33 34 35 36 37 38 39 40, on right: 30 31 35 36 37 38
expression_statement (57)
    on left: 41 42 43, on right: 33 35
expression (58)
    on left: 44 45, on right: 35 36 37 38 40 42 43 62 63 66
logic_expression (59)
    on left: 46 47, on right: 44 45 72 73
rel_expression (60)
    on left: 48 49, on right: 46 47
simple_expression (61)
    on left: 50 51, on right: 48 49 51
term (62)
    on left: 52 53, on right: 50 51 53
unary_expression (63)
    on left: 54 55 56, on right: 52 53 55 56
factor (64)
    on left: 57 58 59 60 61 62 63 64, on right: 54
variable (65)
    on left: 65 66, on right: 45 57 60 61
compound_statement (66)
    on left: 68 70, on right: 10 12 34
@3 (67)
    on left: 67, on right: 68
@4 (68)
    on left: 69, on right: 70
argument_list (69)
    on left: 71, on right: 64
arguments (70)
    on left: 72 73 74, on right: 71 72 74


state 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


state 1

   21 type_specifier: INT .

    $default  reduce using rule 21 (type_specifier)


state 2

   22 type_specifier: FLOAT .

    $default  reduce using rule 22 (type_specifier)


state 3

   23 type_specifier: VOID .

    $default  reduce using rule 23 (type_specifier)


state 4

    0 $accept: start . $end

    $end  shift, and go to state 11


state 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


state 6

    3 program: unit .

    $default  reduce using rule 3 (program)


state 7

    6 unit: func_declaration .

    $default  reduce using rule 6 (unit)


state 8

    5 unit: func_definition .

    $default  reduce using rule 5 (unit)


state 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


state 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier . ID LPAREN RPAREN @1 compound_statement
   12                | type_specifier . ID LPAREN parameter_list RPAREN @2 compound_statement
   19 var_declaration: type_specifier . declaration_list SEMICOLON
   20                | type_specifier . declaration_list error

    ID  shift, and go to state 13

    declaration_list  go to state 14


state 11

    0 $accept: start $end .

    $default  accept


state 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


state 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier ID . LPAREN RPAREN @1 compound_statement
   12                | type_specifier ID . LPAREN parameter_list RPAREN @2 compound_statement
   26 declaration_list: ID .
   27                 | ID . LTHIRD CONST_INT RTHIRD
   28                 | ID . LTHIRD error RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 26 (declaration_list)


state 14

   19 var_declaration: type_specifier declaration_list . SEMICOLON
   20                | type_specifier declaration_list . error
   24 declaration_list: declaration_list . COMMA ID
   25                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD
   29                 | declaration_list . COMMA ID LTHIRD error RTHIRD

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


state 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN . RPAREN @1 compound_statement
   12                | type_specifier ID LPAREN . parameter_list RPAREN @2 compound_statement

    error   shift, and go to state 20
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 21

    parameter_list  go to state 22
    type_specifier  go to state 23


state 16

   27 declaration_list: ID LTHIRD . CONST_INT RTHIRD
   28                 | ID LTHIRD . error RTHIRD

    error      shift, and go to state 24
    CONST_INT  shift, and go to state 25


state 17

   20 var_declaration: type_specifier declaration_list error .

    $default  reduce using rule 20 (var_declaration)


state 18

   24 declaration_list: declaration_list COMMA . ID
   25                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD
   29                 | declaration_list COMMA . ID LTHIRD error RTHIRD

    ID  shift, and go to state 26


state 19

   19 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 19 (var_declaration)


state 20

   18 parameter_list: error . ID

    ID  shift, and go to state 27


state 21

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN RPAREN . @1 compound_statement

    SEMICOLON  shift, and go to state 28

    $default  reduce using rule 9 (@1)

    @1  go to state 29


state 22

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   12 func_definition: type_specifier ID LPAREN parameter_list . RPAREN @2 compound_statement
   13 parameter_list: parameter_list . COMMA type_specifier ID
   14               | parameter_list . COMMA type_specifier
   17               | parameter_list . COMMA error ID

    RPAREN  shift, and go to state 30
    COMMA   shift, and go to state 31


state 23

   15 parameter_list: type_specifier . ID
   16               | type_specifier .

    ID  shift, and go to state 32

    $default  reduce using rule 16 (parameter_list)


state 24

   28 declaration_list: ID LTHIRD error . RTHIRD

    RTHIRD  shift, and go to state 33


state 25

   27 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 34


state 26

   24 declaration_list: declaration_list COMMA ID .
   25                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD
   29                 | declaration_list COMMA ID . LTHIRD error RTHIRD

    LTHIRD  shift, and go to state 35

    $default  reduce using rule 24 (declaration_list)


state 27

   18 parameter_list: error ID .

    $default  reduce using rule 18 (parameter_list)


state 28

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


state 29

   10 func_definition: type_specifier ID LPAREN RPAREN @1 . compound_statement

    LCURL  shift, and go to state 36

    compound_statement  go to state 37


state 30

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN . @2 compound_statement

    SEMICOLON  shift, and go to state 38

    $default  reduce using rule 11 (@2)

    @2  go to state 39


state 31

   13 parameter_list: parameter_list COMMA . type_specifier ID
   14               | parameter_list COMMA . type_specifier
   17               | parameter_list COMMA . error ID

    error  shift, and go to state 40
    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 41


state 32

   15 parameter_list: type_specifier ID .

    $default  reduce using rule 15 (parameter_list)


state 33

   28 declaration_list: ID LTHIRD error RTHIRD .

    $default  reduce using rule 28 (declaration_list)


state 34

   27 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


state 35

   25 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD
   29                 | declaration_list COMMA ID LTHIRD . error RTHIRD

    error      shift, and go to state 42
    CONST_INT  shift, and go to state 43


state 36

   68 compound_statement: LCURL . @3 statements RCURL
   70                   | LCURL . @4 RCURL

    RCURL     reduce using rule 69 (@4)
    $default  reduce using rule 67 (@3)

    @3  go to state 44
    @4  go to state 45


state 37

   10 func_definition: type_specifier ID LPAREN RPAREN @1 compound_statement .

    $default  reduce using rule 10 (func_definition)


state 38

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


state 39

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN @2 . compound_statement

    LCURL  shift, and go to state 36

    compound_statement  go to state 46


state 40

   17 parameter_list: parameter_list COMMA error . ID

    ID  shift, and go to state 47


state 41

   13 parameter_list: parameter_list COMMA type_specifier . ID
   14               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 48

    $default  reduce using rule 14 (parameter_list)


state 42

   29 declaration_list: declaration_list COMMA ID LTHIRD error . RTHIRD

    RTHIRD  shift, and go to state 49


state 43

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 50


state 44

   68 compound_statement: LCURL @3 . statements RCURL

    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 53
    RETURN       shift, and go to state 54
    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 57
    PRINTLN      shift, and go to state 58
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    var_declaration       go to state 63
    type_specifier        go to state 64
    statements            go to state 65
    statement             go to state 66
    expression_statement  go to state 67
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75
    compound_statement    go to state 76


state 45

   70 compound_statement: LCURL @4 . RCURL

    RCURL  shift, and go to state 77


state 46

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN @2 compound_statement .

    $default  reduce using rule 12 (func_definition)


state 47

   17 parameter_list: parameter_list COMMA error ID .

    $default  reduce using rule 17 (parameter_list)


state 48

   13 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


state 49

   29 declaration_list: declaration_list COMMA ID LTHIRD error RTHIRD .

    $default  reduce using rule 29 (declaration_list)


state 50

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


state 51

   36 statement: IF . LPAREN expression RPAREN statement
   37          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 78


state 52

   35 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 79


state 53

   38 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 80


state 54

   40 statement: RETURN . expression SEMICOLON

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression         go to state 81
    logic_expression   go to state 69
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 75


state 55

   56 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    unary_expression  go to state 82
    factor            go to state 74
    variable          go to state 83


state 56

   62 factor: LPAREN . expression RPAREN
   63       | LPAREN . expression error

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression         go to state 84
    logic_expression   go to state 69
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 75


state 57

   41 expression_statement: SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


state 58

   39 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 85


state 59

   64 factor: ID . LPAREN argument_list RPAREN
   65 variable: ID .
   66         | ID . LTHIRD expression RTHIRD

    LPAREN  shift, and go to state 86
    LTHIRD  shift, and go to state 87

    $default  reduce using rule 65 (variable)


state 60

   58 factor: CONST_INT .

    $default  reduce using rule 58 (factor)


state 61

   59 factor: CONST_FLOAT .

    $default  reduce using rule 59 (factor)


state 62

   55 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    unary_expression  go to state 88
    factor            go to state 74
    variable          go to state 83


state 63

   32 statement: var_declaration .

    $default  reduce using rule 32 (statement)


state 64

   19 var_declaration: type_specifier . declaration_list SEMICOLON
   20                | type_specifier . declaration_list error

    ID  shift, and go to state 89

    declaration_list  go to state 14


state 65

   31 statements: statements . statement
   68 compound_statement: LCURL @3 statements . RCURL

    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 53
    RETURN       shift, and go to state 54
    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    RCURL        shift, and go to state 90
    SEMICOLON    shift, and go to state 57
    PRINTLN      shift, and go to state 58
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    var_declaration       go to state 63
    type_specifier        go to state 64
    statement             go to state 91
    expression_statement  go to state 67
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75
    compound_statement    go to state 76


state 66

   30 statements: statement .

    $default  reduce using rule 30 (statements)


state 67

   33 statement: expression_statement .

    $default  reduce using rule 33 (statement)


state 68

   42 expression_statement: expression . SEMICOLON
   43                     | expression . error

    error      shift, and go to state 92
    SEMICOLON  shift, and go to state 93


state 69

   44 expression: logic_expression .

    $default  reduce using rule 44 (expression)


state 70

   46 logic_expression: rel_expression .
   47                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 94

    $default  reduce using rule 46 (logic_expression)


state 71

   48 rel_expression: simple_expression .
   49               | simple_expression . RELOP simple_expression
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 95
    RELOP  shift, and go to state 96

    $default  reduce using rule 48 (rel_expression)


state 72

   50 simple_expression: term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 97

    $default  reduce using rule 50 (simple_expression)


state 73

   52 term: unary_expression .

    $default  reduce using rule 52 (term)


state 74

   54 unary_expression: factor .

    $default  reduce using rule 54 (unary_expression)


state 75

   45 expression: variable . ASSIGNOP logic_expression
   57 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    INCOP     shift, and go to state 98
    DECOP     shift, and go to state 99
    ASSIGNOP  shift, and go to state 100

    $default  reduce using rule 57 (factor)


state 76

   34 statement: compound_statement .

    $default  reduce using rule 34 (statement)


state 77

   70 compound_statement: LCURL @4 RCURL .

    $default  reduce using rule 70 (compound_statement)


state 78

   36 statement: IF LPAREN . expression RPAREN statement
   37          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression         go to state 101
    logic_expression   go to state 69
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 75


state 79

   35 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    SEMICOLON    shift, and go to state 57
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression_statement  go to state 102
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75


state 80

   38 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression         go to state 103
    logic_expression   go to state 69
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 75


state 81

   40 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 104


state 82

   56 unary_expression: NOT unary_expression .

    $default  reduce using rule 56 (unary_expression)


state 83

   57 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    INCOP  shift, and go to state 98
    DECOP  shift, and go to state 99

    $default  reduce using rule 57 (factor)


state 84

   62 factor: LPAREN expression . RPAREN
   63       | LPAREN expression . error

    error   shift, and go to state 105
    RPAREN  shift, and go to state 106


state 85

   39 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 107


state 86

   64 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    logic_expression   go to state 108
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 83
    argument_list      go to state 109
    arguments          go to state 110


state 87

   66 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression         go to state 111
    logic_expression   go to state 69
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 75


state 88

   55 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 55 (unary_expression)


state 89

   26 declaration_list: ID .
   27                 | ID . LTHIRD CONST_INT RTHIRD
   28                 | ID . LTHIRD error RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 26 (declaration_list)


state 90

   68 compound_statement: LCURL @3 statements RCURL .

    $default  reduce using rule 68 (compound_statement)


state 91

   31 statements: statements statement .

    $default  reduce using rule 31 (statements)


state 92

   43 expression_statement: expression error .

    $default  reduce using rule 43 (expression_statement)


state 93

   42 expression_statement: expression SEMICOLON .

    $default  reduce using rule 42 (expression_statement)


state 94

   47 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    rel_expression     go to state 112
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 83


state 95

   51 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    term              go to state 113
    unary_expression  go to state 73
    factor            go to state 74
    variable          go to state 83


state 96

   49 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    simple_expression  go to state 114
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 83


state 97

   53 term: term MULOP . unary_expression

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    unary_expression  go to state 115
    factor            go to state 74
    variable          go to state 83


state 98

   60 factor: variable INCOP .

    $default  reduce using rule 60 (factor)


state 99

   61 factor: variable DECOP .

    $default  reduce using rule 61 (factor)


state 100

   45 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    logic_expression   go to state 116
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 83


state 101

   36 statement: IF LPAREN expression . RPAREN statement
   37          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 117


state 102

   35 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    SEMICOLON    shift, and go to state 57
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression_statement  go to state 118
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75


state 103

   38 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 119


state 104

   40 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 40 (statement)


state 105

   63 factor: LPAREN expression error .

    $default  reduce using rule 63 (factor)


state 106

   62 factor: LPAREN expression RPAREN .

    $default  reduce using rule 62 (factor)


state 107

   39 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 120


state 108

   73 arguments: logic_expression .

    $default  reduce using rule 73 (arguments)


state 109

   64 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 121


state 110

   71 argument_list: arguments .
   72 arguments: arguments . COMMA logic_expression
   74          | arguments . COMMA error

    COMMA  shift, and go to state 122

    $default  reduce using rule 71 (argument_list)


state 111

   66 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 123


state 112

   47 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 47 (logic_expression)


state 113

   51 simple_expression: simple_expression ADDOP term .
   53 term: term . MULOP unary_expression

    MULOP  shift, and go to state 97

    $default  reduce using rule 51 (simple_expression)


state 114

   49 rel_expression: simple_expression RELOP simple_expression .
   51 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 95

    $default  reduce using rule 49 (rel_expression)


state 115

   53 term: term MULOP unary_expression .

    $default  reduce using rule 53 (term)


state 116

   45 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 45 (expression)


state 117

   36 statement: IF LPAREN expression RPAREN . statement
   37          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 53
    RETURN       shift, and go to state 54
    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 57
    PRINTLN      shift, and go to state 58
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    var_declaration       go to state 63
    type_specifier        go to state 64
    statement             go to state 124
    expression_statement  go to state 67
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75
    compound_statement    go to state 76


state 118

   35 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    expression         go to state 125
    logic_expression   go to state 69
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 75


state 119

   38 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 53
    RETURN       shift, and go to state 54
    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 57
    PRINTLN      shift, and go to state 58
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    var_declaration       go to state 63
    type_specifier        go to state 64
    statement             go to state 126
    expression_statement  go to state 67
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75
    compound_statement    go to state 76


state 120

   39 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 127


state 121

   64 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 64 (factor)


state 122

   72 arguments: arguments COMMA . logic_expression
   74          | arguments COMMA . error

    error        shift, and go to state 128
    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    logic_expression   go to state 129
    rel_expression     go to state 70
    simple_expression  go to state 71
    term               go to state 72
    unary_expression   go to state 73
    factor             go to state 74
    variable           go to state 83


state 123

   66 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 66 (variable)


state 124

   36 statement: IF LPAREN expression RPAREN statement .
   37          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 130

    $default  reduce using rule 36 (statement)


state 125

   35 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 131


state 126

   38 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 38 (statement)


state 127

   39 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 39 (statement)


state 128

   74 arguments: arguments COMMA error .

    $default  reduce using rule 74 (arguments)


state 129

   72 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 72 (arguments)


state 130

   37 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 53
    RETURN       shift, and go to state 54
    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 57
    PRINTLN      shift, and go to state 58
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    var_declaration       go to state 63
    type_specifier        go to state 64
    statement             go to state 132
    expression_statement  go to state 67
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75
    compound_statement    go to state 76


state 131

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    WHILE        shift, and go to state 53
    RETURN       shift, and go to state 54
    NOT          shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 57
    PRINTLN      shift, and go to state 58
    ID           shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ADDOP        shift, and go to state 62

    var_declaration       go to state 63
    type_specifier        go to state 64
    statement             go to state 133
    expression_statement  go to state 67
    expression            go to state 68
    logic_expression      go to state 69
    rel_expression        go to state 70
    simple_expression     go to state 71
    term                  go to state 72
    unary_expression      go to state 73
    factor                go to state 74
    variable              go to state 75
    compound_statement    go to state 76


state 132

   37 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 37 (statement)


state 133

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 35 (statement)
